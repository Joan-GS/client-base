import type {Components} from '@gluestack-style/react/lib/typescript/types';
import {createConfig} from '@gluestack-ui/themed';
import { config } from './src/components/ui/gluestack-ui-provider/config';

export const customConfig = createConfig({
  ...config,
  aliases: {
    bg: 'backgroundColor',
    backgroundColor: 'backgroundColor',
    bgColor: 'backgroundColor',
    color: 'color',
    borderColor: 'borderColor',
    shadowColor: 'shadowColor',
    shadowOffset: 'shadowOffset',
    shadowOpacity: 'shadowOpacity',
    shadowRadius: 'shadowRadius',
    elevation: 'elevation',
    // dimension
    h: 'height',
    w: 'width',
    height: 'height',
    width: 'width',
    // padding
    p: 'padding',
    px: 'paddingHorizontal',
    py: 'paddingVertical',
    pt: 'paddingTop',
    pb: 'paddingBottom',
    pr: 'paddingRight',
    pl: 'paddingLeft',
    padding: 'padding',
    paddingHorizontal: 'paddingHorizontal',
    paddingVertical: 'paddingVertical',
    paddingTop: 'paddingTop',
    paddingBottom: 'paddingBottom',
    paddingRight: 'paddingRight',
    paddingLeft: 'paddingLeft',
    // margin
    m: 'margin',
    mx: 'marginHorizontal',
    my: 'marginVertical',
    mt: 'marginTop',
    mb: 'marginBottom',
    mr: 'marginRight',
    ml: 'marginLeft',
    margin: 'margin',
    marginHorizontal: 'marginHorizontal',
    marginVertical: 'marginVertical',
    marginTop: 'marginTop',
    marginBottom: 'marginBottom',
    marginRight: 'marginRight',
    marginLeft: 'marginLeft',
    // Borders
    borderWidth: 'borderWidth',
    borderRadius: 'borderRadius',
    rounded: 'borderRadius',
    // Typography
    letterSpacing: 'letterSpacing',
    lineHeight: 'lineHeight',
    fontWeight: 'fontWeight',
    fontFamily: 'fontFamily',
    fontSize: 'fontSize',
    shadow: 'shadow',
    condition: 'condition',
  },
  tokens: {
    colors: {
      white: '#FFFFFF',
      black: '#000000',
      lightText: '#FFFFFF',
      darkText: '#000000',
      // Primary - Tonal Palette
      primary0: '#000000',
      primary10: '#21005D',
      primary20: '#381E72',
      primary30: '#4F378B',
      primary40: '#6750A4',
      primary50: '#7F67BE',
      primary60: '#9A82DB',
      primary70: '#B69DF8',
      primary80: '#D0BCFF',
      primary90: '#EADDFF',
      primary95: '#F6EDFF',
      primary99: '#FFFBFE',
      primary100: '#FFFFFF',
      // Secondary - Tonal Palette
      secondary0: '#F5F5F5',
      secondary10: '#1D192B',
      secondary20: '#332D41',
      secondary30: '#4A4458',
      secondary40: '#625B71',
      secondary50: '#7A7289',
      secondary60: '#958DA5',
      secondary70: '#B0A7C0',
      secondary80: '#CCC2DC',
      secondary90: '#E8DEF8',
      secondary95: '#F6EDFF',
      secondary99: '#FFFBFE',
      secondary100: '#FFFFFF',
      // Teritary - Tonal Palette
      tertiary0: '#CAC4D0',
      tertiary10: '#31111D',
      tertiary20: '#492532',
      tertiary30: '#633B48',
      tertiary40: '#7D5260',
      tertiary50: '#986977',
      tertiary60: '#B58392',
      tertiary70: '#D29DAC',
      tertiary80: '#EFB8C8',
      tertiary90: '#FFD8E4',
      tertiary95: '#FFECF1',
      tertiary99: '#FFFBFA',
      tertiary100: '#FFFFFF',
      // Error - Tonal Palette
      error0: '#000000',
      error10: '#410E0B',
      error20: '#601410',
      error30: '#8C1D18',
      error40: '#B3261E',
      error50: '#DC362E',
      error60: '#E46962',
      error70: '#EC928E',
      error80: '#F2B8B5',
      error90: '#F9DEDC',
      error95: '#FCEEEE',
      error99: '#FFFBF9',
      error100: '#FFFFFF',
      // Neutral - Tonal Palette
      neutral0: '#000000',
      neutral10: '#1D1B20',
      neutral20: '#322F35',
      neutral30: '#48464C',
      neutral40: '#605D64',
      neutral50: '#79767D',
      neutral60: '#938F96',
      neutral70: '#AEA9B1',
      neutral80: '#CAC5CD',
      neutral90: '#E6E0E9',
      neutral95: '#F5EFF7',
      neutral99: '#FFFBFE',
      neutral100: '#FFFFFF',
      // Theme - Tonal Palette
      surfaceDim: '#DED8E1',
      surface: '#FEF7FF',
      surfaceBright: '#FEF7FF',
      surfaceCard: '#F5F5F5',
      onSurfaceVariant: '#49454F',
    },
    space: {
      px: '1px',
      '0': 0,
      '0.5': 2,
      '1': 4,
      '1.5': 6,
      '2': 8,
      '2.5': 10,
      '3': 12,
      '3.5': 14,
      '4': 16,
      '5': 20,
      '6': 24,
      '7': 28,
      '8': 32,
      '9': 36,
      '10': 40,
      '12': 48,
      '16': 64,
      '20': 80,
      '24': 96,
      '32': 128,
      '40': 160,
      '48': 192,
      '56': 224,
      '64': 256,
      '72': 288,
      '80': 320,
      '96': 384,
      '1/2': '50%',
      '1/3': '33.333%',
      '2/3': '66.666%',
      '1/4': '25%',
      '2/4': '50%',
      '3/4': '75%',
      '1/5': '20%',
      '2/5': '40%',
      '3/5': '60%',
      '4/5': '80%',
      '1/6': '16.666%',
      '2/6': '33.333%',
      '3/6': '50%',
      '4/6': '66.666%',
      '5/6': '83.333%',
      full: '100%',
      base: 20,
      sm: 30,
      md: 30,
      lg: 40,
      xl: 40,
    },
    borderWidths: {
      '0': 0,
      '1': '1px',
      '2': '2px',
      '4': '4px',
      '8': '8px',
    },
    radii: {
      none: 0,
      xs: 2,
      sm: 4,
      md: 6,
      lg: 8,
      xl: 10,
      '2xl': 12,
      '3xl': 16,
      '4xl': 24,
      '5xl': 100,
      full: 9999,
    },
    breakpoints: {
      base: 0,
      sm: 600,
      md: 905,
      lg: 1240,
      xl: 1440,
    },
    mediaQueries: {
      base: '@media screen and (min-width: 0)',
      // customQuery: '@media screen and (min-width: 300)', //! CURRENTLY NOT WORKING VERSION 1.1.18
      sm: '@media screen and (min-width: 600px)',
      md: '@media screen and (min-width: 905px)',
      lg: '@media screen and (min-width: 1240px)',
      xl: '@media screen and (min-width: 1440px)',
    },
    letterSpacings: {
      xs: '-0.8px',
      sm: '-0.4px',
      md: 0,
      lg: '0.4px',
      xl: '0.8px',
      '2xl': '1.6px',
    },
    lineHeights: {
      '5xs': '10px',
      '4xs': '12px',
      '3xs': '14px',
      '2xs': '16px',
      xs: '18px',
      sm: '20px',
      md: '22px',
      lg: '24px',
      xl: '28px',
      '2xl': '32px',
      '3xl': '40px',
      '4xl': '48px',
      '5xl': '64px',
    },
    fontWeights: {
      hairline: '100',
      thin: '200',
      light: '300',
      normal: '400',
      medium: '500',
      semibold: '600',
      bold: '700',
      extrabold: '800',
      black: '900',
      extraBlack: '950',
    },
    fonts: {
      heading: 'Roboto',
      body: 'Roboto',
      mono: 'Roboto',
    },
    fontSizes: {
      '2xs': 10,
      xs: 12,
      sm: 14,
      md: 16,
      lg: 18,
      xl: 20,
      '2xl': 24,
      '3xl': 30,
      '4xl': 36,
      '5xl': 48,
      '6xl': 60,
      '7xl': 72,
      '8xl': 96,
      '9xl': 128,
    },
    opacity: {
      0: 0,
      5: 0.05,
      10: 0.1,
      20: 0.2,
      25: 0.25,
      30: 0.3,
      40: 0.4,
      50: 0.5,
      60: 0.6,
      70: 0.7,
      75: 0.75,
      80: 0.8,
      90: 0.9,
      95: 0.95,
      100: 1,
    },
  },
} as const);

type Config = typeof customConfig;

declare module '@gluestack-style/react' {
  interface ICustomConfig extends Config {}
  interface IComponents extends Components {}
}
